{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\goyal\\\\OneDrive\\\\Desktop\\\\Typeface\\\\zomato-app\\\\frontend\\\\src\\\\pages\\\\RestaurantPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport RestaurantDetails from '../components/RestaurantDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [restaurant, setRestaurant] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchRestaurant = async () => {\n      try {\n        const response = await apiService.getRestaurantById(id);\n        setRestaurant(response.data);\n      } catch (err) {\n        setError('Failed to fetch restaurant details');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRestaurant();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: restaurant ? /*#__PURE__*/_jsxDEV(RestaurantDetails, {\n      restaurant: restaurant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No restaurant found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(RestaurantPage, \"kfYHPFfHHteHaLxjTNxkeAAevLQ=\", false, function () {\n  return [useParams];\n});\n_c = RestaurantPage;\nexport default RestaurantPage;\nvar _c;\n$RefreshReg$(_c, \"RestaurantPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","RestaurantDetails","jsxDEV","_jsxDEV","RestaurantPage","_s","id","restaurant","setRestaurant","loading","setLoading","error","setError","fetchRestaurant","response","apiService","getRestaurantById","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/goyal/OneDrive/Desktop/Typeface/zomato-app/frontend/src/pages/RestaurantPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getRestaurantById, getRestaurants } from '../services/apiService';\nimport RestaurantDetails from '../components/RestaurantDetails';\n\nconst RestaurantPage: React.FC = () => {\n    const { id } = useParams<{ id: string }>();\n    const [restaurant, setRestaurant] = useState<any>(null);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const fetchRestaurant = async () => {\n            try {\n                const response = await apiService.getRestaurantById(id);\n                setRestaurant(response.data);\n            } catch (err) {\n                setError('Failed to fetch restaurant details');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchRestaurant();\n    }, [id]);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>{error}</div>;\n    }\n\n    return (\n        <div>\n            {restaurant ? (\n                <RestaurantDetails restaurant={restaurant} />\n            ) : (\n                <div>No restaurant found</div>\n            )}\n        </div>\n    );\n};\n\nexport default RestaurantPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,iBAAiB,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAiB,CAAC;EAC1C,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAM,IAAI,CAAC;EACvD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACZ,MAAMe,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,UAAU,CAACC,iBAAiB,CAACV,EAAE,CAAC;QACvDE,aAAa,CAACM,QAAQ,CAACG,IAAI,CAAC;MAChC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVN,QAAQ,CAAC,oCAAoC,CAAC;MAClD,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,IAAIG,OAAO,EAAE;IACT,oBAAON,OAAA;MAAAgB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,IAAIZ,KAAK,EAAE;IACP,oBAAOR,OAAA;MAAAgB,QAAA,EAAMR;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7B;EAEA,oBACIpB,OAAA;IAAAgB,QAAA,EACKZ,UAAU,gBACPJ,OAAA,CAACF,iBAAiB;MAACM,UAAU,EAAEA;IAAW;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE7CpB,OAAA;MAAAgB,QAAA,EAAK;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAChC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAClB,EAAA,CAtCID,cAAwB;EAAA,QACXJ,SAAS;AAAA;AAAAwB,EAAA,GADtBpB,cAAwB;AAwC9B,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}